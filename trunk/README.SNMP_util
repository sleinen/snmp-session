		       README for SNMP_util.pm

		   Mike Mitchell <mcm@unx.sas.com>

I was using Simon Leinen's SNMP tools in various perl scripts, and I
found that I was using the same functions over and over.  I grouped
the common routines into a separate perl module so that I would only
have to make changes in one place, rather than track down all the
different perl scripts that included the code.  The result is the
'SNMP_utils.pm' module.

Thanks goes to Tobias Oetiker (oetiker@ee.ethz.ch) of MRTG fame
for the basic layout of the functions.

The SNMP_utils.pm module contains the functions

  snmpget(community@host:port, OID, [OID...])
  snmpgetnext(community@host:port, OID, [OID...])
  snmpwalk(community@host:port, OID)
  snmpset(community@host:port, OID, type, value, [OID, type, value ...])
  snmptrap(community@host:port, enterpriseOID, agent, generalID,
	    specificID, OID, type, value, [OID, type, value ...])


The snmpget function returns an array with the results of the 'get'
operation.  The value associated with each OID is returned as a
separate value in the array.

The snmpgetnext function returns an array with the results of the
'getnext' operation.  The OID number is added to the result as a
prefix with a colon separator, like '1.3.6.1.2.1.2.2.1.2.1:ethernet'

The snmpwalk function only accepts one OID number as an argument, and
returns an array with all the OID numbers and values.  The instance
part of the OID number is added as a prefix just like in the
snmpgetnext functions.  A walk might return an array like
'1:ethernet', '2:ethernet', '3:fddi'.

The snmpset function is passed OID, type, and value triplets.  It
returns an array with the result of the set.

Here is a simple example of using the functions:

#! /usr/local/bin/perl5
BEGIN {

###
# Finally, SNMPGet fully written in PERL5. 
# Thanks to Simon Leinen <simon@switch.ch>
# More on: http://www.switch.ch/misc/leinen/snmp/perl/
####

# There older perls tend to behave peculiar with
# large integers ... 
require 5.003;

use SNMP_util "0.54";
}

use strict;

$main::DEBUG=0;

sub main {
  
  my($oid, $host, $response, $cont);
  my($desc, @ret);

  $host = "127.0.0.1";
  $cont = "Your Name";

  print "Trying 'getnext' on $host\n";
  @ret = &snmpgetnext($host, "ifDescr");
  foreach $desc (@ret)
  {
    ($oid, $desc) = split(':', $desc, 2);
    print "$oid = $desc\n";
  }

  print "Trying 'walk' on $host\n";
  @ret = &snmpwalk($host, "ifDescr");
  foreach $desc (@ret)
  {
    ($oid, $desc) = split(':', $desc, 2);
    print "$oid = $desc\n";
  }

  print "Before set:\n";
  $oid = "sysContact";
  ($response) = &snmpget($host, $oid);
  if ($response)
  {
    print "GET $oid : $response\n";
  }
  else
  {
    warn "$host did not respond to SNMP query\n";
  }

  my $oldContact = $response;

  print "setting contact to $cont\n";
  ($response) = &snmpset("security\@$host", $oid, 'string', $cont);

  if ($response)
  {
    print "SET: $oid : $response\n";
  }
  else
  {
    die "$host did not respond to SNMP set\n";
  }

  print "After set:\n";
  ($response) = &snmpget($host, $oid);
  if ($response)
  {
    print "GET $oid : $response\n";
  }
  else
  {
    die "$host did not respond to SNMP query\n";
  }

  print "Setting contact back to $oldContact\n";
  ($response) = &snmpset("security\@$host", $oid, 'string', $oldContact);

  if ($response) {
    print "SET: $oid : $response\n";
  }
  else
  {
    die "$host did not respond to SNMP set\n";
  }

  print "After 2nd set:\n";
  ($response) = &snmpget($host, $oid);
  if ($response) {
    print "GET $oid : $response\n";
  }
  else
  {
    die "$host did not respond to SNMP query\n";
  }
}
main;
exit(0);
