#!/usr/local/bin/perl -w
##
## cricket-genconf-sensor
##
## Generate Cricket configuration for sensor monitoring
##
## Author:        Simon Leinen  <simon@limmat.switch.ch>
## Date created:  21-Dec-2006
##
## This script generates Cricket configuration files for
## SNMP-monitorable sensors in a set of routers.  It does this on the
## basis of a RANCID configuration file repository.  For each router
## in that directory that seems to have monitorable sensors, the
## script calls the `entls' script to generate Cricket configuration.
##
## The result of the script is a configuration file tree in a
## temporary directory.  The user should compare existing
## configuration against this new tree using e.g. "diff -ur".
##
## In the future, the script should be enhanced to apply "safe"
## configuration changes autonomically, and send a report on what was
## changed and what differences remain.

use strict;

### Prototypes
sub read_router_configurations ($ );
sub has_sensors_p ($ );

my $rancid_directory = '/usr/local/rancid/backbone/configs';

my @routers = read_router_configurations ($rancid_directory);

my $tmpdir = '/tmp'.'/foo/';
-d $tmpdir or mkdir $tmpdir or die "Cannot create $tmpdir: $!";

foreach my $router (@routers) {
    next unless has_sensors_p ($router);
    print "$router\n";
    my $rdir = $tmpdir..$router;
    -d $rdir or mkdir $rdir or die "cannot create directory $rdir: $!";
    my $retval = system ('perl -Ilib test/entls -t hctiws@'
			 .$router.':::::2:v4only > '
			 .$rdir.'/'.$router);
    if ($retval) {
	warn "failed to generate configuration for $router";
    }
}

sub read_router_configurations ($ ) {
    my ($dir) = @_;
    my @routers = ();
    opendir CONFIG, $dir
	or die "open directory $dir: $!";
    foreach my $file (readdir CONFIG) {
	next unless -f $dir.'/'.$file;
	push @routers, $file;
    }
    closedir CONFIG
	or die "close directory $dir: $!";
    @routers;
}

sub has_sensors_p ($ ) {
    my ($router) = @_;
    my $have_sensor_p = 0;
    open (CONFIG, $rancid_directory.'/'.$router)
	or die "open configuration file for $router: $!";
    while (<CONFIG>) {
	$have_sensor_p = 1
	    if /Receive Power Sensor/;
    }
    close CONFIG or die "close configuration file for $router: $!";
    return $have_sensor_p;
}
