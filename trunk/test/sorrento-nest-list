#!/usr/local/bin/perl -w

use SNMP_util;

sub process_nest ($$);

snmpmapOID ("slotCardName", "1.3.6.1.4.1.2522.1.1.2.1.1.2",
	    "slotCardType", "1.3.6.1.4.1.2522.1.1.2.1.1.3",
	    "slotCardStatus", "1.3.6.1.4.1.2522.1.1.2.1.1.4",
	    "slotIpAddress", "1.3.6.1.4.1.2522.1.1.3.1.1.2",
	    "cardName", "1.3.6.1.4.1.2522.1.1.3.1.1.3");

my %nestmasters =
    qw(muxCE1 public@130.59.48.16
       muxLS1 public@130.59.48.81
       muxBE1 public@130.59.48.144
       muxBA1 public@130.59.48.208
       muxEZ1 public@130.59.49.16);

my %short_types =
    qw(GMI-1GSX G
       GMOA-1A  AMP
       GMTR-15  C
       GMTR-25  C
       GMOX-06  C
       GMOX-15  C
       GMOX-25  C
       GMOX-ER  C);

foreach (sort keys %nestmasters) {
    my ($dest) = $nestmasters{$_};
    process_nest ($_, $dest);
}
1;

sub process_nest ($$) {
    my ($name, $dest) = @_;
    my %slot_name = ();
    my %slot_type = ();

    my ($nest_ip_address) = ($dest =~ /.*@(.*)$/);
    print "$name-M0\t\tIN\tA\t$nest_ip_address\n",
    "$name\t\tIN\tCNAME\t$name-M0\n"
	if defined $nest_ip_address;
    snmpmaptable ($dest, sub () {
	my ($slotCardSlot, $slotCardName, $slotCardType, $slotCardStatus) = @_;
	return if $slotCardStatus == 3;	# empty
	$slot_name{$slotCardSlot} = $slotCardName;
	$slot_type{$slotCardSlot} = $slotCardType;
    },
		  qw(slotCardName slotCardType slotCardStatus));
    snmpmaptable ($dest, sub () {
	my ($slotIndex, $slotIpAddress, $cardName) = @_;
	return unless exists $slot_name{$slotIndex};

	my $short_type = $short_types{$slot_type{$slotIndex}} || "other";
	print "$name-$short_type$slotIndex\t\tIN\tA\t$slotIpAddress\n";
	#print "$name: slotIndex $slotIndex (name $slot_name{$slotIndex} type $slot_type{$slotIndex}) ip $slotIpAddress type $cardName\n";
    },
		  qw(slotIpAddress cardName));
}
